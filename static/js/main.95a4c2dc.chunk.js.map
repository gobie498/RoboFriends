{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,kCAAKC,YCgBLK,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIhB,OACG,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCEdC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAAtE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,4DAEJG,KAAKX,MAAMK,a,GAhBCQ,aC8FZC,G,wDAvFX,aAAe,IAAD,8BACV,gBAwBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAxB1C,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJP,E,qDAkBZ,WAAqB,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAAQkC,S,oBAsB3C,WACI,MAAgCb,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAPlC,iD,GAnDUZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACK,cAAC,EAAD,IACZC,SAASC,eAAe,SAS1BX,M","file":"static/js/main.95a4c2dc.chunk.js","sourcesContent":["import React from \"react\"; \r\n\r\nconst Card = ({name, email, id}) => {\r\n    // const {name, email, id} = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p> {email}</p>\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","  import React from 'react';\r\nimport Card from './Card';\r\n\r\n const CardList = ( {robots} ) => {\r\n    //  if (true) {\r\n    //      throw new Error('NOOOOOO!');\r\n    //  }\r\n     return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n      </div> \r\n     );\r\n } \r\n\r\n export default CardList\r\n\r\n\r\n//  const CardList = ( {robots} ) => {\r\n//     const cardComponent = robots.map((user, i) => {\r\n//         return (\r\n//            <Card \r\n//            key={i} \r\n//            id={robots[i].id} \r\n//            name={robots[i].name} \r\n//            email={robots[i].email}\r\n//            />\r\n//        );\r\n//     })\r\n//     return(\r\n//        <div>\r\n//            {cardComponent}\r\n//      </div> \r\n//     );\r\n// } \r\n\r\n// export default CardList","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            /> \r\n        </div>  \r\n    );\r\n} \r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '3px solid black', height: '1000px'}} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n    // return <h1>hi</h1>\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops, Thats is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","// import React from \"react\";\r\nimport React, { Component } from \"react\";\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //     .then(response => {\r\n    //         return response.json();\r\n    //     })\r\n    //     .then(users => {\r\n    //         this.setState({ robots: users})\r\n    //     });\r\n    //   }\r\n\r\n      componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users}));\r\n        // .then(users => {});\r\n      }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n    }\r\n\r\n    // render(){\r\n    //     const filteredRobots = this.state.robots.filter(robots =>{\r\n    //         return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    //     })\r\n    //     return( \r\n    //         <div className='tc'>\r\n    //             <h1 className='f2'>RoboFriends</h1>\r\n    //             <SearchBox searchChange={this.onSearchChange}/>\r\n    //             {/* <CardList robots={this.state.robots}/> */}\r\n    //             <CardList robots={filteredRobots}/>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state; // now this.state (destructuring) can be removed everywhere\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        // if (robots.length === 0) {\r\n        return !robots.length ?\r\n        <h1>Loading... </h1> :\r\n        ( \r\n            <div className='tc'>\r\n                <h1 className='f2'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // render(){\r\n    //     const { robots, searchfield } = this.state; // now this.state (destructuring) can be removed everywhere\r\n    //     const filteredRobots = robots.filter(robot =>{\r\n    //         return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    //     })\r\n    //     // if (robots.length === 0) {\r\n    //     if (!robots.length) {\r\n    //         return <h1>Loading... </h1>\r\n    //     } else {\r\n    //     return( \r\n    //         <div className='tc'>\r\n    //             <h1 className='f2'>RoboFriends</h1>\r\n    //             <SearchBox searchChange={this.onSearchChange}/>\r\n    //             <Scroll>\r\n    //                 <CardList robots={filteredRobots}/>\r\n    //             </Scroll>\r\n    //         </div>\r\n    //         );\r\n    //     }\r\n    // }\r\n\r\n} \r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import Card from './Card';\r\n// import CardList from './CardList';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"tachyons\"\r\n\r\n\r\nReactDOM.render(\r\n              <App />\r\n, document.getElementById('root'));\r\n\r\n// ReactDOM.render(\r\n//     <CardList robots={robots}/>\r\n// , document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}